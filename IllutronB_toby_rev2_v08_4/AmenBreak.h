
// Noten werden Octal mit 127 schritten eingegeben 0-127 decimal = 0-177 Octal

unsigned char originalTrack[CHANNEL_MAX][32]=             //Button 1
{  
 // played by Channel 0 - Button 1
   {001,000,000,000, 001,000,000,000, 001,000,000,000, 001,000,000,000, /*|*/ 001,000,000,000, 001,000,000,000, 001,000,000,000, 001,000,000,000},   
 // played by Channel 1 - Button 2 pitchshift = pot2
   {047,000,000,041, 000,000,044,000, 044,000,000,046, 000,000,041,000, /*|*/ 047,000,000,041, 000,000,044,000, 000,044,000,046, 000,000,051,000},   
 // played by Channel 2 - Button 3 pitchshift = shift + pot2
   {000,000,000,050, 000,000,000,000, 000,000,000,050, 000,000,000,000, /*|*/ 000,000,000,050, 000,000,000,000, 000,000,000,050, 000,000,000,000},   
 // Played by channel 3 - Button 4
   {000,000,001,000, 000,000,001,000, 000,000,001,000, 000,000,001,000, /*|*/ 000,000,001,000, 000,000,001,000, 000,000,001,000, 000,000,001,000},   
};




/*
http://en.wikipedia.org/wiki/Amen_break

C | ---- ---- ---- ----                       | ---- ---- ---- ----                | ---- ---- ---- ----              |---- ---- --X- ----|
R | x-x- x-x- x-x- x-x-                       | x-x- x-x- x-x- x-x-                | x-x- x-x- x-X- x-x-              |x-x- x-x- x--- x-x-|
S | ---- o--o -o-- o--o                       | ---- o--o -o-- o--o                | ---- o--o -o-- --o-              |-o-- o--o -o-- --o-|
B | o-o- ---- --oo ----                       | o-o- ---- --oo ----                | o-o- ---- --o- ----              |--oo ---- --o- ----|
  | 1 +  2 +  3 +  4 +                        | 1 +  2 +  3 +  4 +                 | 1 +  2 +  3 +  4 +               |1 +  2 +  3 +  4 + |  
*/
unsigned char amenBreak[4][64] =             // Button 2
{
/* Button 1 */
  {000,000,000,000, 000,000,000,000, 000,000,000,000, 000,000,000,000, /*|*/ 000,000,000,000, 000,000,000,000, 000,000,000,000, 000,000,000,000,  
   000,000,000,000, 000,000,000,000, 000,000,000,000, 000,000,000,000, /*|*/ 000,000,000,000, 000,000,000,000, 000,000,001,000, 000,000,000,000 },
/* Button 3       pitchshift = pot2  */ 
  {070,000,070,000, 070,000,070,000, 070,000,070,000, 070,000,070,000, /*|*/ 070,000,070,000, 070,000,070,000, 070,000,070,000, 070,000,070,000, 
   070,000,070,000, 070,000,070,000, 070,000,075,000, 070,000,070,000, /*|*/ 070,000,070,000, 070,000,070,000, 070,000,000,000, 070,000,070,000 },
/* Button 2 40 -100 -- 270-700       pitchshift = shift + pot2 */
  {000,000,000,000, 070,000,000,060, 000,060,000,000, 120,000,000,060, /*|*/ 000,000,000,000, 070,000,000,060, 000,060,000,000, 050,000,000,060, 
   000,000,000,000, 070,000,000,060, 000,060,000,000, 000,000,050,000, /*|*/ 000,060,000,000, 070,000,000,060, 000,060,000,000, 000,000,050,000 },
/* Button 4 */    
  {001,000,001,000, 000,000,000,000, 000,000,001,001, 000,000,000,000, /*|*/ 001,000,001,000, 000,000,000,000, 000,000,001,001, 000,000,000,000, 
   001,000,001,000, 000,000,000,000, 000,000,001,000, 000,000,000,000, /*|*/ 000,000,001,001, 000,000,000,000, 000,000,001,000, 000,000,000,000 },
};


unsigned char yourTrack[4][64] =           // Button 3

{
/* Button 1 */
   {001,000,000,000, 001,000,000,000, 001,000,000,000, 001,000,000,000, /*|*/ 001,000,000,000, 001,000,000,000, 001,000,000,000, 001,000,000,000,
    001,000,000,000, 001,000,000,000, 001,000,000,000, 001,000,000,000, /*|*/ 001,000,000,000, 001,000,000,000, 001,000,000,000, 001,000,000,000},
/* Button 2       pitchshift = pot2  */
   {057,000,000,000, 057,000,000,000, 055,000,000,000, 057,000,000,000, /*|*/ 055,000,000,000, 057,000,000,000, 056,000,000,000, 057,000,000,000,
    000,000,000,000, 057,000,000,000, 000,000,000,000, 057,000,000,000, /*|*/ 000,000,000,000, 055,000,000,000, 000,000,000,000, 057,000,000,000},
/* Button 3 40 -100 -- 270-700       pitchshift = shift + pot2  */
    {066,066,066,066, 066,066,066,066, 074,000,066,077, 000,066,077,000, /*|*/ 000,000,066,066, 075,000,066,073, 000,066,071,066, 000,077,076,000,
     000,066,066,066, 066,066,066,066, 070,070,070,070, 000,070,070,070, /*|*/ 000,071,071,071, 071,071,071,071, 073,073,073,073, 000,073,071,073},
/* Button 4 */  
   {000,000,001,000, 000,000,001,000, 000,000,001,000, 000,000,001,000, /*|*/ 000,000,001,000, 000,000,001,000, 000,000,001,000, 000,000,001,000, 
    000,000,001,000, 000,000,001,000, 000,000,001,000, 000,000,001,000, /*|*/ 000,000,001,000, 000,000,001,000, 000,000,001,000, 000,000,001,000},
};  


unsigned char yourTrack2[4][128] =       // Button 4
{
/* Button 1 */
   {001,000,000,000, 001,000,000,000, 001,000,000,000, 001,000,000,000, /*|*/ 001,000,000,000, 001,000,000,000, 001,000,000,000, 001,000,000,000,
    001,000,000,000, 001,000,000,000, 001,000,000,000, 001,000,000,000, /*|*/ 001,000,000,000, 001,000,000,000, 001,000,000,000, 001,000,000,000,
    001,000,000,000, 001,000,000,000, 001,000,000,000, 001,000,000,000, /*|*/ 001,000,000,000, 001,000,000,000, 001,000,000,000, 001,000,000,000,
    001,000,000,000, 001,000,000,000, 001,000,000,000, 001,000,000,000, /*|*/ 001,000,000,000, 001,000,000,000, 001,000,000,000, 001,000,000,000 },
/* Button 3     pitchshift = pot2 */
   {340,000,340,000, 340,000,000,000, 340,000,340,000, 340,000,000,000, /*|*/ 340,000,343,000, 336,000,000,338, 340,000,000,000, 000,000,000,000,
    341,000,341,000, 341,000,000,341, 341,000,340,000, 340,000,340,340, /*|*/ 340,000,338,000, 338,000,340,000, 338,000,000,000, 343,000,000,000, 
    340,000,340,000, 340,000,000,000, 340,000,340,000, 340,000,000,000, /*|*/ 340,000,343,000, 336,000,000,338, 340,000,000,000, 000,000,000,000,
    341,000,341,000, 341,000,000,341, 341,000,340,000, 340,000,340,340, /*|*/ 343,000,343,000, 341,000,338,000, 336,000,000,000, 000,000,000,000},
/* Button 2 40 -100 -- 270-700      pitchshift = shift + pot2 */
   {340,000,340,000, 340,000,000,000, 340,000,340,000, 340,000,000,000, /*|*/ 340,000,343,000, 336,000,000,338, 340,000,000,000, 000,000,000,000,
    341,000,341,000, 341,000,000,341, 341,000,340,000, 340,000,340,340, /*|*/ 340,000,338,000, 338,000,340,000, 338,000,000,000, 343,000,000,000, 
    340,000,340,000, 340,000,000,000, 340,000,340,000, 340,000,000,000, /*|*/ 340,000,343,000, 336,000,000,338, 340,000,000,000, 000,000,000,000,
    341,000,341,000, 341,000,000,341, 341,000,340,000, 340,000,340,340, /*|*/ 343,000,343,000, 341,000,338,000, 336,000,000,000, 000,000,000,000},
/* Button 4 */  
   {000,000,001,000, 000,000,001,000, 000,000,001,000, 000,000,001,000, /*|*/ 000,000,001,000, 000,000,001,000, 000,000,001,000, 000,000,001,000, 
    000,000,001,000, 000,000,001,000, 000,000,001,000, 000,000,001,000, /*|*/ 000,000,001,000, 000,000,001,000, 000,000,001,000, 000,000,001,000,
    000,000,001,000, 000,000,001,000, 000,000,001,000, 000,000,001,000, /*|*/ 000,000,001,000, 000,000,001,000, 000,000,001,000, 000,000,001,000,
    000,000,001,000, 000,000,001,000, 000,000,001,000, 000,000,001,000, /*|*/ 000,000,001,000, 000,000,001,000, 000,000,001,000, 000,000,001,000 },
};    



class CSequence
{
  public:
    CSequence(unsigned char *pSequence0,unsigned char *pSequence1,unsigned char *pSequence2,unsigned char *pSequence3,unsigned char sLength)
    {
      m_pSequenceTrack0 = pSequence0;
      m_pSequenceTrack1 = pSequence1;
      m_pSequenceTrack2 = pSequence2;
      m_pSequenceTrack3 = pSequence3;
      m_sLength = sLength;
    }
    unsigned char getTrigger(unsigned char sChannel,unsigned char sBeat)
    {
      unsigned char sTrigger = 0;
      if(sBeat < m_sLength)
      {
        switch(sChannel)
        {
          case 0:
            if(m_pSequenceTrack0 != 0)
             sTrigger = m_pSequenceTrack0[sBeat];
             break;
          case 1:
            if(m_pSequenceTrack1 != 0)
             sTrigger = m_pSequenceTrack1[sBeat];
             break;
          case 2:
            if(m_pSequenceTrack2 != 0)
             sTrigger = m_pSequenceTrack2[sBeat];
             break;
          case 3:
            if(m_pSequenceTrack3 != 0)
             sTrigger = m_pSequenceTrack3[sBeat];
             break;
        }
      }
      return sTrigger;
    }
    uint8_t getLength()
    {
      return m_sLength;
    }
  protected:
    unsigned char *m_pSequenceTrack0;
    unsigned char *m_pSequenceTrack1;
    unsigned char *m_pSequenceTrack2;
    unsigned char *m_pSequenceTrack3;

    unsigned char m_sLength;

   
};

// 11570

CSequence amenSequence(amenBreak[0],amenBreak[1],amenBreak[2],amenBreak[3],64);
CSequence yourSequence(yourTrack[0],yourTrack[1],yourTrack[2],yourTrack[3],64);
CSequence yourSequence2(yourTrack2[0],yourTrack2[1],yourTrack2[2],yourTrack2[3],128);
CSequence originalSequence(originalTrack[0],originalTrack[1],originalTrack[2],originalTrack[3],32);

CSequence *pCurrentSequence3  = &yourSequence;
CSequence *pCurrentSequence4 = &yourSequence2;
CSequence *pCurrentSequence1 = &originalSequence;
CSequence *pCurrentSequence2 = &amenSequence;


  

